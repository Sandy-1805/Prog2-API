openapi: 3.0.0
info:
  title: API avec Authentification
  version: 1.0.0
  description: API de produits et commandes avec authentification

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      description: Authentification avec username/password

  schemas:
    Product:
      type: object
      properties:
        name:
          type: string
          example: "Yaourt nature"
        expiration_datetime:
          type: string
          format: date-time
          example: "2024-08-10T14:30:00Z"
        price:
          type: number
          format: float
          minimum: 0
          example: 1.99
      required:
        - name
        - expiration_datetime
        - price

    Order:
      type: object
      properties:
        identifier:
          type: integer
          example: 1001
        customer_name:
          type: string
          example: "Jean Dupont"
        creation_datetime:
          type: string
          format: date-time
          example: "2024-03-15T10:30:00Z"
        total_amount:
          type: number
          format: float
          minimum: 0
          example: 45.99
      required:
        - identifier
        - customer_name
        - creation_datetime
        - total_amount

    OrderInput:
      type: object
      properties:
        customer_name:
          type: string
          example: "Marie Martin"
        total_amount:
          type: number
          format: float
          minimum: 0
          example: 29.99
      required:
        - customer_name
        - total_amount

  parameters:
    limitParam:
      name: limit
      in: query
      description: Nombre maximum d'éléments à retourner
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      example: 10

    qParam:
      name: q
      in: query
      description: Terme de recherche pour filtrer les produits par nom
      required: false
      schema:
        type: string
        minLength: 1
        maxLength: 100
      example: "lait"

    pageParam:
      name: page
      in: query
      description: Numéro de la page à récupérer
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
      example: 1

    sizeParam:
      name: size
      in: query
      description: Nombre d'éléments par page
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 10
      example: 20

paths:
  /products:
    get:
      tags:
        - Products
      summary: Recherche des produits
      description: Retourne une liste de produits filtrés selon les critères de recherche
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/qParam'
      responses:
        '200':
          description: Liste des produits trouvés
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                multipleProducts:
                  summary: Exemple avec plusieurs produits
                  value:
                    - name: "Lait"
                      expiration_datetime: "2024-12-31T23:59:59Z"
                      price: 2.99
                    - name: "Pain complet"
                      expiration_datetime: "2024-06-15T12:00:00Z"
                      price: 3.49
                emptyList:
                  summary: Exemple avec liste vide
                  value: []

  /orders:
    get:
      tags:
        - Orders
      summary: Liste paginée des commandes
      description: Retourne une liste paginée de toutes les commandes
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/sizeParam'
      responses:
        '200':
          description: Liste des commandes récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
              examples:
                ordersExample:
                  summary: Exemple de commandes
                  value:
                    - identifier: 1001
                      customer_name: "Jean Dupont"
                      creation_datetime: "2024-03-15T10:30:00Z"
                      total_amount: 45.99
                    - identifier: 1002
                      customer_name: "Marie Martin"
                      creation_datetime: "2024-03-14T16:45:00Z"
                      total_amount: 29.99

    post:
      tags:
        - Orders
      summary: Créer une nouvelle commande
      description: Crée une nouvelle commande (authentification requise)
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderInput'
            examples:
              newOrder:
                summary: Exemple de création de commande
                value:
                  customer_name: "Sophie Leroy"
                  total_amount: 67.50
      responses:
        '201':
          description: Commande créée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                createdOrder:
                  summary: Exemple de commande créée
                  value:
                    identifier: 1003
                    customer_name: "Sophie Leroy"
                    creation_datetime: "2024-03-16T09:15:00Z"
                    total_amount: 67.50
        '401':
          description: Non authentifié
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Authentication required"